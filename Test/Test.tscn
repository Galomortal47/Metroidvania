[gd_scene load_steps=24 format=2]

[ext_resource path="res://assets/Platform.tscn" type="PackedScene" id=1]
[ext_resource path="res://Scripts/Platform Sticker.gd" type="Script" id=2]
[ext_resource path="res://assets/Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://icon.png" type="Texture" id=4]
[ext_resource path="res://Scripts/Mouse.gd" type="Script" id=5]
[ext_resource path="res://assets/Enemy.tscn" type="PackedScene" id=6]
[ext_resource path="res://Scripts/screenshot.png" type="Texture" id=7]
[ext_resource path="res://Scripts/Mirror.gd" type="Script" id=8]
[ext_resource path="res://assets/Bolts.tscn" type="PackedScene" id=9]
[ext_resource path="res://Scripts/Box.gd" type="Script" id=10]
[ext_resource path="res://assets/Health.tscn" type="PackedScene" id=11]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 946.495, 10 )

[sub_resource type="RectangleShape2D" id=2]

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 41.6683, 314.736 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 37.9856, 10 )

[sub_resource type="Animation" id=5]
resource_name = "Movment2"
length = 10.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 4, 6, 9, 10 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -243.32, 355.398 ), Vector2( -243.32, 355.398 ), Vector2( 134.309, 355.398 ), Vector2( 134.309, 355.398 ), Vector2( -243.32, 355.398 ), Vector2( -243.32, 355.398 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "movment"
length = 10.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 4, 6, 9, 10 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 699.164, 355.398 ), Vector2( 699.164, 355.398 ), Vector2( 286.903, 355.398 ), Vector2( 286.903, 355.398 ), Vector2( 699.164, 355.398 ), Vector2( 699.164, 355.398 ) ]
}

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 59.9088, 85.4477 )

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

// Gonkee's water shader for Godot 3 - full tutorial https://youtu.be/uhMAHpV_cDg
// If you use this shader, I would prefer if you gave credit to me and my channel

uniform vec4 blue_tint : hint_color;

uniform vec2 sprite_scale;
uniform float scale_x = 0.67;

float rand(vec2 coord){
	return fract(sin(dot(coord, vec2(12.9898, 78.233)))* 43758.5453123);
}

float noise(vec2 coord){
	vec2 i = floor(coord);
	vec2 f = fract(coord);

	// 4 corners of a rectangle surrounding our point
	float a = rand(i);
	float b = rand(i + vec2(1.0, 0.0));
	float c = rand(i + vec2(0.0, 1.0));
	float d = rand(i + vec2(1.0, 1.0));

	vec2 cubic = f * f * (3.0 - 2.0 * f);

	return mix(a, b, cubic.x) + (c - a) * cubic.y * (1.0 - cubic.x) + (d - b) * cubic.x * cubic.y;
}

void fragment(){
	
	vec2 noisecoord1 = UV * sprite_scale * scale_x;
	vec2 noisecoord2 = UV * sprite_scale * scale_x + 4.0;
	
	vec2 motion1 = vec2(TIME * 0.3, TIME * -0.4);
	vec2 motion2 = vec2(TIME * 0.1, TIME * 0.5);
	
	vec2 distort1 = vec2(noise(noisecoord1 + motion1), noise(noisecoord2 + motion1)) - vec2(0.5);
	vec2 distort2 = vec2(noise(noisecoord1 + motion2), noise(noisecoord2 + motion2)) - vec2(0.5);
	
	vec2 distort_sum = (distort1 + distort2) / 60.0;
	
	vec4 color = textureLod(SCREEN_TEXTURE, SCREEN_UV + distort_sum, 0.0);
	
	color = mix(color, blue_tint, 0.3);
	color.rgb = mix(vec3(0.5), color.rgb, 1.4);
	
	float near_top = (UV.y + distort_sum.y) / (0.2 / sprite_scale.y);
	near_top = clamp(near_top, 0.0, 1.0);
	near_top = 1.0 - near_top;
	
	color = mix(color, vec4(1.0), near_top);
	
	float edge_lower = 0.6;
	float edge_upper = edge_lower + 0.1;
	
	if(near_top > edge_lower){
		color.a = 0.0;
		
		if(near_top < edge_upper){
			color.a = (edge_upper - near_top) / (edge_upper - edge_lower);
		}
	}
	
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/blue_tint = Color( 0.478431, 0.705882, 0.721569, 1 )
shader_param/sprite_scale = Vector2( 1, 0.233 )
shader_param/scale_x = 0.5

[sub_resource type="Gradient" id=10]
offsets = PoolRealArray( 1 )
colors = PoolColorArray( 0.648438, 0.975281, 1, 1 )

[sub_resource type="GradientTexture" id=11]
gradient = SubResource( 10 )

[sub_resource type="RectangleShape2D" id=14]
extents = Vector2( 20, 20 )

[node name="Test" type="Node2D"]

[node name="Ground" type="StaticBody2D" parent="."]
editor/display_folded = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="Ground"]
position = Vector2( 523, 589.798 )
shape = SubResource( 1 )

[node name="CollisionShape2D5" type="CollisionShape2D" parent="Ground"]
position = Vector2( -247.563, 720.25 )
shape = SubResource( 1 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="Ground"]
position = Vector2( 687.705, 465.806 )
shape = SubResource( 2 )

[node name="CollisionShape2D3" type="CollisionShape2D" parent="Ground"]
position = Vector2( 619.232, 528.727 )
shape = SubResource( 2 )

[node name="CollisionShape2D4" type="CollisionShape2D" parent="Ground"]
position = Vector2( 806.144, 423.242 )
shape = SubResource( 2 )

[node name="CollisionShape2D6" type="CollisionShape2D" parent="Ground"]
position = Vector2( 702.793, 902.898 )
shape = SubResource( 3 )

[node name="CollisionShape2D7" type="CollisionShape2D" parent="Ground"]
position = Vector2( 1487.2, 288.09 )
shape = SubResource( 3 )

[node name="CollisionShape2D8" type="CollisionShape2D" parent="Ground"]
position = Vector2( -1154.88, 420.592 )
shape = SubResource( 3 )

[node name="Platform" parent="." instance=ExtResource( 1 )]

[node name="Platform2" type="KinematicBody2D" parent="."]
editor/display_folded = true
position = Vector2( -243.32, 355.398 )
motion/sync_to_physics = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="Platform2"]
shape = SubResource( 4 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Platform2"]
autoplay = "Movment2"
anims/Movment2 = SubResource( 5 )
anims/movment = SubResource( 6 )

[node name="Platform Sticker" type="Area2D" parent="Platform2"]
collision_layer = 2
collision_mask = 2
script = ExtResource( 2 )

[node name="Sticker" type="CollisionShape2D" parent="Platform2/Platform Sticker"]
position = Vector2( 0, -76 )
shape = SubResource( 7 )

[node name="Player" parent="." instance=ExtResource( 3 )]

[node name="mouse" type="Sprite" parent="Player"]
visible = false
texture = ExtResource( 4 )
script = ExtResource( 5 )

[node name="Enemy" parent="." instance=ExtResource( 6 )]
position = Vector2( -1040.79, 648.127 )

[node name="Mirror" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0.498039 )
position = Vector2( 154.501, 660 )
scale = Vector2( 1, 0.232664 )
z_index = 4096
texture = ExtResource( 7 )
region_enabled = true
region_rect = Rect2( 0, 130, 1024, 500 )
script = ExtResource( 8 )

[node name="Mirror2" type="Sprite" parent="."]
material = SubResource( 9 )
position = Vector2( 154.501, 660 )
scale = Vector2( 1, 0.232664 )
z_index = 4096
texture = SubResource( 11 )
region_enabled = true
region_rect = Rect2( 0, 130, 1024, 500 )

[node name="Coins" type="CanvasLayer" parent="."]

[node name="Coins" type="Label" parent="Coins"]
margin_left = 46.8655
margin_top = 54.0756
margin_right = 129.865
margin_bottom = 68.0756
text = "Coins:"

[node name="Number" type="Label" parent="Coins"]
margin_left = 88.4462
margin_top = 54.0756
margin_right = 171.446
margin_bottom = 68.0756
text = "100"

[node name="Bolts" parent="." instance=ExtResource( 9 )]

[node name="Box" type="RigidBody2D" parent="." groups=[
"enemy",
]]
position = Vector2( 245.98, 556.307 )
collision_layer = 5
collision_mask = 5
mass = 5000.0
gravity_scale = 2.0
script = ExtResource( 10 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Box"]
shape = SubResource( 14 )

[node name="Health" parent="Box" instance=ExtResource( 11 )]
health_max = 1
health = 1

[connection signal="body_shape_entered" from="Platform2/Platform Sticker" to="Platform2/Platform Sticker" method="_on_Platform_Sticker_body_shape_entered"]
[connection signal="body_shape_exited" from="Platform2/Platform Sticker" to="Platform2/Platform Sticker" method="_on_Platform_Sticker_body_shape_exited"]
[connection signal="body_shape_entered" from="Box" to="Box" method="_on_Box_body_shape_entered"]
